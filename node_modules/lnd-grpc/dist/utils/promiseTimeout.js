"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
/**
 * promiseTimeout - Reject a promise if it doesn't resolve after a given timeout window.
 *
 * @param {number} ms Timeout (ms)
 * @param {Promise} promise Promise to timeout
 * @param {string} message messaged passed to the reject promise
 * @returns {Promise} Promise that rejects in <ms> milliseconds
 */
function _default(ms, promise, message = 'Timed out') {
  // Create a promise that rejects in <ms> milliseconds
  let timerId;
  const timeout = new Promise((resolve, reject) => {
    timerId = setTimeout(() => reject(new Error(message)), ms);
  });
  const clearTimer = value => {
    timerId && clearTimeout(timerId);
    return value;
  };
  // Returns a race between our timeout and the passed in promise
  return Promise.race([promise, timeout]).finally(clearTimer);
}
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtcyIsInByb21pc2UiLCJtZXNzYWdlIiwidGltZXJJZCIsInRpbWVvdXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInNldFRpbWVvdXQiLCJFcnJvciIsImNsZWFyVGltZXIiLCJ2YWx1ZSIsImNsZWFyVGltZW91dCIsInJhY2UiLCJmaW5hbGx5Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL3Byb21pc2VUaW1lb3V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogcHJvbWlzZVRpbWVvdXQgLSBSZWplY3QgYSBwcm9taXNlIGlmIGl0IGRvZXNuJ3QgcmVzb2x2ZSBhZnRlciBhIGdpdmVuIHRpbWVvdXQgd2luZG93LlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBtcyBUaW1lb3V0IChtcylcbiAqIEBwYXJhbSB7UHJvbWlzZX0gcHJvbWlzZSBQcm9taXNlIHRvIHRpbWVvdXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIG1lc3NhZ2VkIHBhc3NlZCB0byB0aGUgcmVqZWN0IHByb21pc2VcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBQcm9taXNlIHRoYXQgcmVqZWN0cyBpbiA8bXM+IG1pbGxpc2Vjb25kc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAobXMsIHByb21pc2UsIG1lc3NhZ2UgPSAnVGltZWQgb3V0Jykge1xuICAvLyBDcmVhdGUgYSBwcm9taXNlIHRoYXQgcmVqZWN0cyBpbiA8bXM+IG1pbGxpc2Vjb25kc1xuICBsZXQgdGltZXJJZFxuXG4gIGNvbnN0IHRpbWVvdXQgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdGltZXJJZCA9IHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcihtZXNzYWdlKSksIG1zKVxuICB9KVxuICBjb25zdCBjbGVhclRpbWVyID0gKHZhbHVlKSA9PiB7XG4gICAgdGltZXJJZCAmJiBjbGVhclRpbWVvdXQodGltZXJJZClcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuICAvLyBSZXR1cm5zIGEgcmFjZSBiZXR3ZWVuIG91ciB0aW1lb3V0IGFuZCB0aGUgcGFzc2VkIGluIHByb21pc2VcbiAgcmV0dXJuIFByb21pc2UucmFjZShbcHJvbWlzZSwgdGltZW91dF0pLmZpbmFsbHkoY2xlYXJUaW1lcilcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlLGtCQUFVQSxFQUFFLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxHQUFHLFdBQVcsRUFBRTtFQUMzRDtFQUNBLElBQUlDLE9BQU87RUFFWCxNQUFNQyxPQUFPLEdBQUcsSUFBSUMsT0FBTyxDQUFDLENBQUNDLE9BQU8sRUFBRUMsTUFBTSxLQUFLO0lBQy9DSixPQUFPLEdBQUdLLFVBQVUsQ0FBQyxNQUFNRCxNQUFNLENBQUMsSUFBSUUsS0FBSyxDQUFDUCxPQUFPLENBQUMsQ0FBQyxFQUFFRixFQUFFLENBQUM7RUFDNUQsQ0FBQyxDQUFDO0VBQ0YsTUFBTVUsVUFBVSxHQUFJQyxLQUFLLElBQUs7SUFDNUJSLE9BQU8sSUFBSVMsWUFBWSxDQUFDVCxPQUFPLENBQUM7SUFDaEMsT0FBT1EsS0FBSztFQUNkLENBQUM7RUFDRDtFQUNBLE9BQU9OLE9BQU8sQ0FBQ1EsSUFBSSxDQUFDLENBQUNaLE9BQU8sRUFBRUcsT0FBTyxDQUFDLENBQUMsQ0FBQ1UsT0FBTyxDQUFDSixVQUFVLENBQUM7QUFDN0Q7QUFBQyJ9